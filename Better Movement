using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerSpawner : MonoBehaviour
{
    public GameObject playerPrefab;
    public float moveSpeed = 5f;
    public float jumpForce = 10f;

    private Rigidbody2D rb;
    private bool isGrounded;
    private float groundCheckRadius = 0.2f;
    public LayerMask groundLayer;
    private Transform groundCheck;

    private GameObject playerInstance;

    void Awake()
    {
        // Pre-instantiate the player prefab and set up references
        playerInstance = Instantiate(playerPrefab, transform.position, Quaternion.identity);
        rb = playerInstance.GetComponent<Rigidbody2D>();
        groundCheck = playerInstance.transform.Find("GroundCheck");
        
        if (rb == null || groundCheck == null)
        {
            Debug.LogError("Player prefab must have Rigidbody2D and GroundCheck.");
        }
    }

    void Start()
    {
        // Attach the player prefab to this object (PlayerSpawner)
        playerInstance.transform.parent = transform;
    }

    void Update()
    {
        // Check if player is grounded
        isGrounded = Physics2D.OverlapCircle(groundCheck.position, groundCheckRadius, groundLayer);

        // Handle input for horizontal movement and jumping
        HandleMovement();
    }

    void FixedUpdate()
    {
        // Apply constant forces or physics-related updates here
        ApplyPhysics();
    }

    void HandleMovement()
    {
        // Horizontal movement
        float moveInput = Input.GetAxis("Horizontal");
        rb.velocity = new Vector2(moveInput * moveSpeed, rb.velocity.y);

        // Jumping
        if (Input.GetKeyDown(KeyCode.Space) && isGrounded)
        {
            rb.velocity = new Vector2(rb.velocity.x, jumpForce);
        }
    }

    void ApplyPhysics()
    {
        // Placeholder for future physics logic
        // For example, you could add drag or other constant forces here
    }
}
